{"version":3,"sources":["Components/Card-list/card/Card.component.jsx","Components/Card-list/Card-list.components.jsx","Components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UAEI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEtB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCJKC,G,MAAW,SAAAR,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SAEFD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPnBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAErB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2CHG,G,wDA3Cb,aAAe,IAAD,8BACZ,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAGf,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBARR,E,qDAWd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAET,SAAUmB,S,oBAO7C,WAAU,IAAD,EAE2BC,KAAKP,MAA/Bb,EAFD,EAECA,SAAUU,EAFX,EAEWA,YACZW,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UAEE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAcgB,KAAKhB,eAGrB,cAAC,EAAD,CAAUJ,SAAUqB,W,GArCVI,IAAMC,YCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.971c4986.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n\r\n        <h2> {props.monster.name} </h2>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport {Card} from './card/Card.component';\r\n\r\nimport './Card-list.styles.css';\r\n\r\nexport const CardList = props => {\r\n\r\n    return <div className='card-list'>\r\n\r\n        {props.monsters.map(monster =>\r\n            (<Card key={monster.id} monster={monster} />)\r\n        )}\r\n\r\n    </div>;\r\n};","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n)\r\n\r\n","import React from 'react';\n\nimport { CardList } from './Components/Card-list/Card-list.components';\n\nimport { SearchBox } from './Components/search-box/search-box.components';\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className='App'>\n\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={this.handleChange}\n        />\n\n        <CardList monsters={filteredMonsters} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}